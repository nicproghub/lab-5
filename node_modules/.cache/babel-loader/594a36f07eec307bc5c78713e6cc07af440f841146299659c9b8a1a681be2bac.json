{"ast":null,"code":"var _jsxFileName = \"/app/src/components/List.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(props) {\n  console.log(props);\n  function onChange() {\n    //find the task we want to update and update it\n    props.setTasks(tasks => tasks.map(t => {\n      if (t.id === props.id) {\n        return {\n          id: t.id,\n          description: t.description,\n          completed: !t.completed\n        };\n      } else {\n        return t;\n      }\n    }));\n  }\n  function o_Click() {\n    //find the task we want to update and update it\n    props.setTasks(tasks => tasks.filter(t => t.id !== props.id));\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: o_Click,\n      children: \"Del\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), props.description, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.completed,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n_c = Task;\nfunction List(props) {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  function text_Change(event) {\n    setNewTask(event.target.value);\n  }\n  function add_Click() {\n    props.setTasks(tasks => [...tasks, {\n      id: tasks.length + 1,\n      description: newTask,\n      completed: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task here...\",\n      onChange: text_Change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: add_Click,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => /*#__PURE__*/_jsxDEV(Task, {\n        setTasks: props.setTasks,\n        id: t.id,\n        description: t.description,\n        completed: t.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n_s(List, \"4D3TTGns9x2jT45i0XsiEmEZ47k=\");\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Task","props","console","log","onChange","setTasks","tasks","map","t","id","description","completed","o_Click","filter","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","List","_s","newTask","setNewTask","text_Change","event","target","value","add_Click","length","heading","placeholder","_c2","$RefreshReg$"],"sources":["/app/src/components/List.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Task(props) {\n\tconsole.log(props);\n\n\tfunction onChange(){\n\t\t//find the task we want to update and update it\n\t\tprops.setTasks(tasks=> tasks.map(t => {\n\t\t\tif (t.id === props.id) {\n\t\t\t\treturn{\n\t\t\t\t\tid: t.id,\n\t\t\t\t\tdescription: t.description,\n\t\t\t\t\tcompleted: !t.completed\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\t)\n\t\t);\n\n\t}\n\n\tfunction o_Click(){\n\t\t//find the task we want to update and update it\n\t\tprops.setTasks(tasks=> tasks.filter(t => t.id !== props.id)\n\t\t);\n\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<button \n\t\t\t\ttype=\"button\" onClick={o_Click}>Del</button>\n\t\t\t{ props.description } \n\t\t\t<input \n\t\t\t\ttype=\"checkbox\" \n\t\t\t\tchecked={props.completed} \n\t\t\t\tonChange={onChange} \n\t\t\t/>\n\t\t</li>\n\t);\n}\n\nfunction List(props) {\n\tconst [newTask, setNewTask] = useState(\"\");\n\tfunction text_Change(event)\n\t{\n\t\tsetNewTask(event.target.value);\n\t}\n\tfunction add_Click()\n\t{\n\t\tprops.setTasks(tasks=>[...tasks,{\n\t\t\t\t\t\t\t\t\tid:tasks.length+1,\n\t\t\t\t\t\t\t\t\tdescription:newTask,\n\t\t\t\t\t\t\t\t\tcompleted:false\n\t\t\t\t\t\t\t\t\t\t}]\n\n\t\t);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>{ props.heading }</h1>\n\t\t\t<b>Add Task</b>\n\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"Add a new task here...\"\n\t\t\t\t\tonChange={text_Change}/>\n\t\t\t<button type=\"button\" onClick={add_Click}>Add</button>\n\t\t\t<ul>\n\t\t\t\t{ props.tasks.map(t => \n\t\t\t\t\t<Task\n\t\t\t\t\t\tsetTasks={props.setTasks} \n\t\t\t\t\t\tid={t.id}\n\t\t\t\t\t\tdescription={t.description} \n\t\t\t\t\t\tcompleted={t.completed} \n\t\t\t\t/>) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}